name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: 빌드 및 Docker 이미지 배포
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: 자바 17 버전 다운로드
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # application.yml 파일 생성
    - name: YML 파일 생성
      run: |
        cd ./src/main/resources
        touch ./application.yml
        
        echo "${{ secrets.APPLICATION_YML }}" > ./application.yml
      shell: bash

    - name: Gradle 설정
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

    - name: 빌드 권한 설정
      run: chmod +x ./gradlew
      
    - name: 빌드 실행
      run: ./gradlew build

    - name: Docker 로그인
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_ID }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
        
        
    - name: Docker 이미지 생성
      run: |
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/website .
      
    - name: Docker 이미지 push
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/website

  deploy:
    name: 도커 이미지를 활용하여 서버에 배포
    runs-on: ubuntu-latest
    permissions: write-all
    needs: build

    steps:
      - uses: actions/checkout@v3

      - name: 배포
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{secrets.GCP_HOST}}
          username: ${{secrets.GCP_USERNAME}}
          key: ${{secrets.GCP_PRIVATEKEY}}
          script: |
            sudo docker login -u ${{ secrets.DOCKERHUB_ID }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
            sudo docker pull ${{secrets.DOCKERHUB_USERNAME}}/website
            sudo docker stop website
            sudo docker container rm website
            sudo docker run -dit -p 80:8080 --name website --link redis:redis ${{secrets.DOCKERHUB_USERNAME}}/website
            sudo docker image prune -f
