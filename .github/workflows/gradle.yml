name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: 빌드 및 Docker 이미지 배포
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: 자바 17 버전 다운로드
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # application.yml 파일 생성
    - name: YML 파일 생성
      run: |
        cd ./src/main/resources
        touch ./application.yml
        
        echo "${{ secrets.APPLICATION_YML }}" > ./application.yml
      shell: bash

    - name: Gradle 설정
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

    - name: 빌드 권한 설정
      run: chmod +x ./gradlew
      
    - name: 빌드 실행
      run: ./gradlew build

    - name: Docker 로그인
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_ID }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
        
        
    - name: Docker 이미지 생성
      run: |
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/website .
      
    - name: Docker 이미지 push
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/website

  deploy:
    name: 도커 이미지를 활용하여 서버에 배포
    runs-on: ubuntu-latest # 실행될 인스턴스 OS와 버전

    steps:
      - name: excuting remote ssh commands
        uses: appleboy/ssh-action@v0.1.6 # ssh 접속하는 오픈소스
        with:
          host: ${{ secrets.REMOTE_IP }} # 인스턴스 IP
          username: ${{ secrets.REMOTE_USER }} # 우분투 아이디
          key: ${{ secrets.REMOTE_PRIVATE_KEY }} # ec2 instance pem key
          port: ${{ secrets.REMOTE_SSH_PORT }} # 접속포트
          script: | # 실행할 스크립트
            cd /home/ubuntu/Server-V2
            git pull origin dev
            pm2 kill
            npm i --force
            npm run build
            pm2 start dist/main.js